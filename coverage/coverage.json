{
"/home/f/Projects/sirryyah/src/client/utils.ts":{"path":"/home/f/Projects/sirryyah/src/client/utils.ts","statementMap":{"1":{"start":{"line":3,"column":31},"end":{"line":3,"column":53}},"2":{"start":{"line":3,"column":37},"end":{"line":3,"column":53}},"3":{"start":{"line":6,"column":2},"end":{"line":11,"column":5}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":35}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":64}},"6":{"start":{"line":8,"column":26},"end":{"line":8,"column":63}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":42}},"8":{"start":{"line":9,"column":26},"end":{"line":9,"column":41}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"10":{"start":{"line":15,"column":2},"end":{"line":20,"column":5}},"11":{"start":{"line":16,"column":19},"end":{"line":16,"column":35}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":64}},"13":{"start":{"line":17,"column":26},"end":{"line":17,"column":63}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":42}},"15":{"start":{"line":18,"column":26},"end":{"line":18,"column":41}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":36}},"17":{"start":{"line":24,"column":15},"end":{"line":24,"column":35}},"18":{"start":{"line":25,"column":18},"end":{"line":25,"column":43}},"19":{"start":{"line":26,"column":2},"end":{"line":26,"column":30}}},"fnMap":{"1":{"name":"(anonymous_0)","line":3,"loc":{"start":{"line":3,"column":37},"end":{"line":3,"column":53}}},"2":{"name":"blobToArrayBuffer","line":5,"loc":{"start":{"line":5,"column":44},"end":{"line":12,"column":1}}},"3":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":37},"end":{"line":11,"column":3}}},"4":{"name":"(anonymous_3)","line":8,"loc":{"start":{"line":8,"column":26},"end":{"line":8,"column":63}}},"5":{"name":"(anonymous_4)","line":9,"loc":{"start":{"line":9,"column":26},"end":{"line":9,"column":41}}},"6":{"name":"blobToString","line":14,"loc":{"start":{"line":14,"column":39},"end":{"line":21,"column":1}}},"7":{"name":"(anonymous_6)","line":15,"loc":{"start":{"line":15,"column":37},"end":{"line":20,"column":3}}},"8":{"name":"(anonymous_7)","line":17,"loc":{"start":{"line":17,"column":26},"end":{"line":17,"column":63}}},"9":{"name":"(anonymous_8)","line":18,"loc":{"start":{"line":18,"column":26},"end":{"line":18,"column":41}}},"10":{"name":"arrayBufferToString","line":23,"loc":{"start":{"line":23,"column":75},"end":{"line":27,"column":1}}}},"branchMap":{"1":{"line":23,"type":"default-arg","locations":[{"start":{"line":23,"column":68},"end":{"line":23,"column":75}}]}},"s":{"1":1,"2":0,"3":3,"4":3,"5":3,"6":3,"7":3,"8":0,"9":3,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":2,"18":2,"19":2},"b":{"1":[2]},"f":{"1":0,"2":3,"3":3,"4":3,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2},"code":"import uniqueId from 'lodash/uniqueId';\n\nexport const createMessageId = () => uniqueId('msg_');\n\nexport function blobToArrayBuffer(blob: Blob): Promise<ArrayBuffer> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = e => reject(e.error);\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nexport function blobToString(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve(reader.result as ArrayBuffer);\n    reader.onerror = e => reject(e.error);\n    reader.readAsBinaryString(blob);\n  });\n}\n\nexport function arrayBufferToString(buffer: ArrayBuffer, encoding = 'utf-8'): string {\n  const view = new DataView(buffer);\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(view);\n}","l":{"3":1,"6":3,"7":3,"8":3,"9":3,"10":3,"15":0,"16":0,"17":0,"18":0,"19":0,"24":2,"25":2,"26":2}},
"/home/f/Projects/sirryyah/src/client/crypto.ts":{"path":"/home/f/Projects/sirryyah/src/client/crypto.ts","statementMap":{"1":{"start":{"line":4,"column":15},"end":{"line":4,"column":20}},"2":{"start":{"line":6,"column":19},"end":{"line":15,"column":1}},"3":{"start":{"line":17,"column":31},"end":{"line":23,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":22,"column":30}},"5":{"start":{"line":25,"column":31},"end":{"line":36,"column":1}},"6":{"start":{"line":26,"column":2},"end":{"line":35,"column":4}},"7":{"start":{"line":38,"column":25},"end":{"line":41,"column":1}},"8":{"start":{"line":38,"column":46},"end":{"line":41,"column":1}},"9":{"start":{"line":39,"column":12},"end":{"line":39,"column":54}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":40}},"11":{"start":{"line":43,"column":25},"end":{"line":45,"column":1}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":71}},"13":{"start":{"line":47,"column":34},"end":{"line":76,"column":1}},"14":{"start":{"line":47,"column":68},"end":{"line":76,"column":1}},"15":{"start":{"line":48,"column":43},"end":{"line":48,"column":50}},"16":{"start":{"line":48,"column":31},"end":{"line":48,"column":50}},"17":{"start":{"line":52,"column":6},"end":{"line":60,"column":4}},"18":{"start":{"line":55,"column":6},"end":{"line":58,"column":9}},"19":{"start":{"line":61,"column":13},"end":{"line":61,"column":56}},"20":{"start":{"line":62,"column":18},"end":{"line":69,"column":3}},"21":{"start":{"line":70,"column":2},"end":{"line":75,"column":4}},"22":{"start":{"line":78,"column":34},"end":{"line":97,"column":1}},"23":{"start":{"line":78,"column":63},"end":{"line":97,"column":1}},"24":{"start":{"line":79,"column":46},"end":{"line":79,"column":53}},"25":{"start":{"line":79,"column":34},"end":{"line":79,"column":53}},"26":{"start":{"line":80,"column":15},"end":{"line":80,"column":22}},"27":{"start":{"line":81,"column":28},"end":{"line":81,"column":54}},"28":{"start":{"line":82,"column":20},"end":{"line":82,"column":75}},"29":{"start":{"line":83,"column":17},"end":{"line":90,"column":3}},"30":{"start":{"line":91,"column":27},"end":{"line":91,"column":116}},"31":{"start":{"line":92,"column":2},"end":{"line":96,"column":3}}},"fnMap":{"1":{"name":"(anonymous_7)","line":17,"loc":{"start":{"line":17,"column":31},"end":{"line":23,"column":1}}},"2":{"name":"(anonymous_8)","line":25,"loc":{"start":{"line":25,"column":75},"end":{"line":36,"column":1}}},"3":{"name":"(anonymous_9)","line":38,"loc":{"start":{"line":38,"column":46},"end":{"line":41,"column":1}}},"4":{"name":"(anonymous_11)","line":43,"loc":{"start":{"line":43,"column":41},"end":{"line":45,"column":1}}},"5":{"name":"(anonymous_12)","line":47,"loc":{"start":{"line":47,"column":68},"end":{"line":76,"column":1}}},"6":{"name":"(anonymous_14)","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":59,"column":5}}},"7":{"name":"(anonymous_15)","line":78,"loc":{"start":{"line":78,"column":63},"end":{"line":97,"column":1}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":7,"5":1,"6":6,"7":1,"8":3,"9":3,"10":3,"11":1,"12":3,"13":1,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":1,"23":3,"24":3,"25":3,"26":3,"27":3,"28":3,"29":3,"30":2,"31":2},"b":{},"f":{"1":7,"2":6,"3":6,"4":3,"5":6,"6":3,"7":6},"code":"import { blobToArrayBuffer, arrayBufferToString } from 'client/utils';\nimport omit from 'lodash/omit';\n\nconst format = 'jwk';\n\nconst algorithms = {\n  dh: {\n    name: 'ECDH',\n    namedCurve: 'P-256', // can be 'P-256', 'P-384', or 'P-521'\n  },\n  aes: {\n    name: 'AES-GCM',\n    length: 256, // can be  128, 192, or 256\n  },\n};\n\nexport const generateKeyPair = () => {\n  return crypto.subtle.generateKey(\n    algorithms.dh,\n    true, // extractable\n    ['deriveKey'],\n  ) as Promise<CryptoKeyPair>;\n};\n\nexport const deriveSharedKey = (privateKey: CryptoKey, publicKey: CryptoKey) => {\n  return crypto.subtle.deriveKey(\n    { \n      ...algorithms.dh,\n      public: publicKey,\n    },\n    privateKey,\n    algorithms.aes,\n    true,\n    ['encrypt', 'decrypt']\n  );\n};\n\nexport const exportKey = async (key: CryptoKey) => {\n  const k = await crypto.subtle.exportKey(format, key);\n  return omit(k, 'key_ops') as typeof k; // Workaround for Firefox\n}\n\nexport const importKey = (key: JsonWebKey) => {\n  return crypto.subtle.importKey(format, key, algorithms.dh, true, []);\n}\n\nexport const encrypt: Encryptor = async (message, recipientPublicKey) => {\n  const { to, localId, status, ...rest } = message;\n  const [\n    data,\n    [sharedKey, publicKey],\n  ] = await Promise.all([\n    blobToArrayBuffer(new Blob([JSON.stringify(rest)])),\n    generateKeyPair().then(own => {\n      return Promise.all([\n        deriveSharedKey(own.privateKey, recipientPublicKey),\n        exportKey(own.publicKey),\n      ]);\n    }),\n  ]);\n  const iv = crypto.getRandomValues(new Uint32Array(12));\n  const payload = await crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    sharedKey,\n    data,\n  );\n  return {\n    type: 'outgoing',\n    status,\n    localId, to,\n    publicKey, iv, payload,\n  };\n}\n\nexport const decrypt: Decryptor = async (message, ownPrivateKey) => {\n  const { payload, iv, publicKey, ...rest } = message;\n  const data = payload;\n  const importedPublicKey = await importKey(publicKey);\n  const sharedKey = await deriveSharedKey(ownPrivateKey, importedPublicKey);\n  const buffer = await crypto.subtle.decrypt(\n    {\n      name: algorithms.aes.name,\n      iv,\n    },\n    sharedKey,\n    data,\n  );\n  const decryptedPayload = JSON.parse(arrayBufferToString(buffer)) as Partial<LocalMessage<'incoming', 'decrypted'>>;\n  return {\n    ...decryptedPayload,\n    ...rest,\n    status: 'unread',\n  }\n}\n","l":{"4":1,"6":1,"17":1,"18":7,"25":1,"26":6,"38":3,"39":3,"40":3,"43":1,"44":3,"47":3,"48":3,"52":3,"55":3,"61":3,"62":3,"70":3,"78":3,"79":3,"80":3,"81":3,"82":3,"83":3,"91":2,"92":2}},
"/home/f/Projects/sirryyah/src/client/store/utils.ts":{"path":"/home/f/Projects/sirryyah/src/client/store/utils.ts","statementMap":{"1":{"start":{"line":2,"column":2},"end":{"line":5,"column":4}},"2":{"start":{"line":9,"column":2},"end":{"line":9,"column":64}},"3":{"start":{"line":9,"column":33},"end":{"line":9,"column":63}},"4":{"start":{"line":15,"column":2},"end":{"line":24,"column":4}},"5":{"start":{"line":16,"column":81},"end":{"line":16,"column":97}},"6":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":36}},"8":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"9":{"start":{"line":21,"column":6},"end":{"line":21,"column":19}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}}},"fnMap":{"1":{"name":"createAction","line":1,"loc":{"start":{"line":1,"column":78},"end":{"line":6,"column":1}}},"2":{"name":"createActionCreator","line":8,"loc":{"start":{"line":8,"column":65},"end":{"line":10,"column":1}}},"3":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":33},"end":{"line":9,"column":63}}},"4":{"name":"handleActions","line":13,"loc":{"start":{"line":13,"column":61},"end":{"line":25,"column":1}}},"5":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":60},"end":{"line":24,"column":3}}},"6":{"name":"isActionOfType","line":27,"loc":{"start":{"line":27,"column":83},"end":{"line":29,"column":1}}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},{"start":{"line":20,"column":4},"end":{"line":22,"column":5}}]}},"s":{"1":7,"2":7,"3":7,"4":6,"5":54,"6":54,"7":6,"8":48,"9":30,"10":18,"11":8},"b":{"1":[6,48],"2":[30,18]},"f":{"1":7,"2":7,"3":7,"4":6,"5":54,"6":8},"code":"export function createAction<T extends ActionType>(type: T, payload: Events[T]): Action<T> {\n  return {\n    type,\n    payload,\n  };\n};\n\nexport function createActionCreator<T extends ActionType>(type: T): ActionCreator<T> {\n  return (payload: Events[T]) => createAction<T>(type, payload);\n};\n\nexport function handleActions<Key extends StoreKey>(\n  map: ActionToReducerMap<Key>, defaultState: StoreState[Key],\n): Reducer<StoreState[Key], ActionType> {\n  return (state: StoreState[Key], action: Action<ActionType>) => {\n    const reducer: Reducer<StoreState[Key], typeof action['type']> | undefined = map[action.type];\n    if (typeof reducer !== 'undefined') {\n      return reducer(state, action);\n    }\n    if (typeof state !== 'undefined') {\n      return state;\n    }\n    return defaultState;\n  };\n}\n\nexport function isActionOfType<T extends ActionType>(action: GenericAction, type: T): action is Action<T> {\n  return type === action.type;\n}\n","l":{"2":7,"9":7,"15":6,"16":54,"17":54,"18":6,"20":48,"21":30,"23":18,"28":8}},
"/home/f/Projects/sirryyah/src/client/store/reducer.ts":{"path":"/home/f/Projects/sirryyah/src/client/store/reducer.ts","statementMap":{"1":{"start":{"line":5,"column":31},"end":{"line":53,"column":1}},"2":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"3":{"start":{"line":13,"column":6},"end":{"line":13,"column":19}},"4":{"start":{"line":18,"column":6},"end":{"line":21,"column":8}},"5":{"start":{"line":25,"column":64},"end":{"line":25,"column":73}},"6":{"start":{"line":28,"column":65},"end":{"line":28,"column":75}},"7":{"start":{"line":32,"column":6},"end":{"line":35,"column":8}},"8":{"start":{"line":38,"column":6},"end":{"line":41,"column":8}},"9":{"start":{"line":44,"column":6},"end":{"line":50,"column":8}},"10":{"start":{"line":55,"column":16},"end":{"line":55,"column":55}},"11":{"start":{"line":57,"column":29},"end":{"line":57,"column":68}},"12":{"start":{"line":57,"column":52},"end":{"line":57,"column":68}},"13":{"start":{"line":58,"column":28},"end":{"line":58,"column":66}},"14":{"start":{"line":58,"column":51},"end":{"line":58,"column":66}},"15":{"start":{"line":59,"column":27},"end":{"line":59,"column":72}},"16":{"start":{"line":59,"column":50},"end":{"line":59,"column":72}}},"fnMap":{"1":{"name":"(anonymous_0)","line":7,"loc":{"start":{"line":7,"column":62},"end":{"line":9,"column":5}}},"2":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":61},"end":{"line":14,"column":5}}},"3":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":51},"end":{"line":22,"column":5}}},"4":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":64},"end":{"line":25,"column":73}}},"5":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":65},"end":{"line":28,"column":75}}},"6":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":41},"end":{"line":36,"column":5}}},"7":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":60},"end":{"line":42,"column":5}}},"8":{"name":"(anonymous_7)","line":43,"loc":{"start":{"line":43,"column":48},"end":{"line":51,"column":5}}},"9":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":52},"end":{"line":57,"column":68}}},"10":{"name":"(anonymous_9)","line":58,"loc":{"start":{"line":58,"column":51},"end":{"line":58,"column":66}}},"11":{"name":"(anonymous_10)","line":59,"loc":{"start":{"line":59,"column":50},"end":{"line":59,"column":72}}}},"branchMap":{},"s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":1,"7":0,"8":1,"9":3,"10":1,"11":1,"12":2,"13":1,"14":1,"15":1,"16":3},"b":{},"f":{"1":0,"2":0,"3":0,"4":1,"5":1,"6":0,"7":1,"8":3,"9":2,"10":1,"11":3},"code":"import { combineReducers } from 'redux';\n\nimport { handleActions } from './utils';\n\nconst reducerMap: ReducerMap = {\n  userId: handleActions<'userId'>({\n    CREATE_USER_ACCOUNT_SUCCEEDED: (_, { payload: { userId } }) => {\n      return userId;\n    },\n  }, null),\n  token: handleActions<'token'>({\n    CREATE_USER_ACCOUNT_SUCCEEDED: (_, { payload: { token } }) => {\n      return token;\n    },\n  }, null),\n  userProfile: handleActions<'userProfile'>({\n    UPDATE_USER_DATA_REQUESTED: (state, { payload }) => {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  }, null),\n  publicKey: handleActions<'publicKey'>({\n    GENERATE_KEYS_SUCCEEDED: (_, { payload: { publicKey } }) => publicKey,\n  }, null),\n  privateKey: handleActions<'privateKey'>({\n    GENERATE_KEYS_SUCCEEDED: (_, { payload: { privateKey } }) => privateKey,\n  }, null),\n  inMemoryMessages: handleActions<'inMemoryMessages'>({\n    MESSAGE_RECEIVED: (state, { payload }) => {\n      return {\n        ...state,\n        [payload.localId]: payload,\n      };\n    },\n    SEND_MESSAGE_REQUESTED: (state, { payload: { message } }) => {\n      return {\n        ...state,\n        [message.localId]: message,\n      };\n    },\n    MESSAGE_DETAILS_CHANGED: (state, { payload }) => {\n      return {\n        ...state,\n        [payload.localId]: {\n          ...state[payload.localId],\n          ...payload,\n        },\n      };\n    },\n  }, { }),\n}\n\nconst reducer = combineReducers<StoreState>(reducerMap);\n\nexport const getPrivateKey = (state: StoreState) => state.privateKey;\nexport const getPublicKey = (state: StoreState) => state.publicKey;\nexport const getMessages = (state: StoreState) => state.inMemoryMessages;\n\nexport default reducer;\n","l":{"5":1,"8":0,"13":0,"18":0,"25":1,"28":1,"32":0,"38":1,"44":3,"55":1,"57":2,"58":1,"59":3}},
"/home/f/Projects/sirryyah/src/client/actions.ts":{"path":"/home/f/Projects/sirryyah/src/client/actions.ts","statementMap":{"1":{"start":{"line":3,"column":29},"end":{"line":3,"column":75}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":68}},"3":{"start":{"line":5,"column":27},"end":{"line":5,"column":72}},"4":{"start":{"line":6,"column":36},"end":{"line":6,"column":91}},"5":{"start":{"line":7,"column":33},"end":{"line":7,"column":79}},"6":{"start":{"line":8,"column":40},"end":{"line":8,"column":83}},"7":{"start":{"line":9,"column":31},"end":{"line":9,"column":70}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{},"code":"import { createActionCreator } from './store/utils';\n\nexport const updateMessage = createActionCreator('MESSAGE_DETAILS_CHANGED');\nexport const sendFailed = createActionCreator('SEND_MESSAGE_FAILED');\nexport const sendMessage = createActionCreator('SEND_MESSAGE_REQUESTED');\nexport const sendEncryptedMessage = createActionCreator('SEND_ENCRYPTED_MESSAGE_REQUESTED');\nexport const keyPairGenereated = createActionCreator('GENERATE_KEYS_SUCCEEDED');\nexport const keyPairGenereationFailed = createActionCreator('GENERATE_KEYS_FAILED');\nexport const messageReceived = createActionCreator('MESSAGE_RECEIVED');\n","l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1}},
"/home/f/Projects/sirryyah/src/client/store/middleware/encryption.ts":{"path":"/home/f/Projects/sirryyah/src/client/store/middleware/encryption.ts","statementMap":{"1":{"start":{"line":17,"column":31},"end":{"line":56,"column":3}},"2":{"start":{"line":18,"column":2},"end":{"line":56,"column":3}},"3":{"start":{"line":18,"column":37},"end":{"line":56,"column":3}},"4":{"start":{"line":18,"column":65},"end":{"line":56,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":55,"column":5}},"6":{"start":{"line":20,"column":6},"end":{"line":25,"column":7}},"7":{"start":{"line":21,"column":42},"end":{"line":21,"column":65}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":59}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":46}},"10":{"start":{"line":26,"column":11},"end":{"line":55,"column":5}},"11":{"start":{"line":27,"column":6},"end":{"line":27,"column":19}},"12":{"start":{"line":28,"column":37},"end":{"line":28,"column":51}},"13":{"start":{"line":29,"column":26},"end":{"line":29,"column":33}},"14":{"start":{"line":30,"column":6},"end":{"line":30,"column":61}},"15":{"start":{"line":31,"column":6},"end":{"line":36,"column":7}},"16":{"start":{"line":32,"column":33},"end":{"line":32,"column":66}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":53}},"18":{"start":{"line":35,"column":8},"end":{"line":35,"column":62}},"19":{"start":{"line":37,"column":11},"end":{"line":55,"column":5}},"20":{"start":{"line":38,"column":35},"end":{"line":38,"column":41}},"21":{"start":{"line":39,"column":26},"end":{"line":39,"column":33}},"22":{"start":{"line":40,"column":6},"end":{"line":40,"column":61}},"23":{"start":{"line":41,"column":20},"end":{"line":41,"column":30}},"24":{"start":{"line":42,"column":6},"end":{"line":52,"column":7}},"25":{"start":{"line":43,"column":27},"end":{"line":43,"column":47}},"26":{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},"27":{"start":{"line":45,"column":35},"end":{"line":45,"column":69}},"28":{"start":{"line":46,"column":10},"end":{"line":46,"column":64}},"29":{"start":{"line":48,"column":10},"end":{"line":48,"column":53}},"30":{"start":{"line":51,"column":8},"end":{"line":51,"column":62}},"31":{"start":{"line":54,"column":6},"end":{"line":54,"column":19}}},"fnMap":{"1":{"name":"(anonymous_6)","line":18,"loc":{"start":{"line":18,"column":2},"end":{"line":56,"column":3}}},"2":{"name":"(anonymous_7)","line":18,"loc":{"start":{"line":18,"column":37},"end":{"line":56,"column":3}}},"3":{"name":"(anonymous_8)","line":18,"loc":{"start":{"line":18,"column":65},"end":{"line":56,"column":3}}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":55,"column":5}},{"start":{"line":19,"column":4},"end":{"line":55,"column":5}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":11},"end":{"line":55,"column":5}},{"start":{"line":26,"column":11},"end":{"line":55,"column":5}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":11},"end":{"line":55,"column":5}},{"start":{"line":37,"column":11},"end":{"line":55,"column":5}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":49,"column":9}},{"start":{"line":44,"column":8},"end":{"line":49,"column":9}}]}},"s":{"1":1,"2":1,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":3,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":2,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":1},"b":{"1":[0,3],"2":[1,2],"3":[1,1],"4":[1,0]},"f":{"1":1,"2":1,"3":6},"code":"import { Store, Dispatch, Middleware } from 'redux';\n\nimport {\n  updateMessage,\n  sendFailed,\n  sendEncryptedMessage,\n  keyPairGenereated,\n  keyPairGenereationFailed,\n} from '../../actions';\n\nimport { getPrivateKey } from '../reducer';\n\nimport { isActionOfType } from '../utils';\n\nimport { encrypt, decrypt, generateKeyPair } from 'client/crypto';\n\nconst middleware: Middleware = ({ getState }: Store<StoreState>) =>\n  (next: Dispatch<GenericAction>) => async (action: GenericAction) => {\n    if (isActionOfType(action, 'GENERATE_KEYS_REQUESTED')) {\n      try {\n        const { publicKey, privateKey } = await generateKeyPair();\n        next(keyPairGenereated({ privateKey, publicKey }));\n      } catch (error) {\n        next(keyPairGenereationFailed(error));\n      }\n    } else if (isActionOfType(action, 'SEND_MESSAGE_REQUESTED')) {\n      next(action);\n      const { message, publicKey } = action.payload;\n      const { localId } = message;\n      next(updateMessage({ localId, status: 'encrypting' }));\n      try {\n        const encryptedMessage = await encrypt(message, publicKey);\n        next(sendEncryptedMessage(encryptedMessage));\n      } catch (error) {\n        next(sendFailed({ localId, message: error.message }));\n      }\n    } else if (isActionOfType(action, 'MESSAGE_RECEIVED')) {\n      const { payload: message } = action;\n      const { localId } = message;\n      next(updateMessage({ localId, status: 'decrypting' }));\n      const state = getState();\n      try {\n        const privateKey = getPrivateKey(state);\n        if (privateKey !== null) {\n          const decryptedMessage = await decrypt(message, privateKey);\n          next(updateMessage({ ...decryptedMessage, localId }));\n        } else {\n          throw new TypeError('Missing private key');\n        }\n      } catch (error) {\n        next(sendFailed({ localId, message: error.message }));\n      }\n    } else {\n      next(action);\n    }\n  };\n\nexport default middleware;\n","l":{"17":1,"18":3,"19":3,"20":0,"21":0,"22":0,"24":0,"26":3,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"35":0,"37":2,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"48":0,"51":0,"54":1}},
"/home/f/Projects/sirryyah/src/client/store/index.ts":{"path":"/home/f/Projects/sirryyah/src/client/store/index.ts","statementMap":{"1":{"start":{"line":12,"column":19},"end":{"line":14,"column":1}},"2":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":18,"column":4},"end":{"line":18,"column":38}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":23}},"5":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}},"6":{"start":{"line":23,"column":30},"end":{"line":39,"column":1}},"7":{"start":{"line":24,"column":16},"end":{"line":30,"column":3}},"8":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"9":{"start":{"line":33,"column":4},"end":{"line":36,"column":7}},"10":{"start":{"line":34,"column":26},"end":{"line":34,"column":54}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":40}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":36}}},"fnMap":{"1":{"name":"addDevTools","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":21,"column":1}}},"2":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}}},"3":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":30},"end":{"line":39,"column":1}}},"4":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":35},"end":{"line":36,"column":5}}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},{"start":{"line":17,"column":2},"end":{"line":19,"column":3}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":43}},{"start":{"line":17,"column":47},"end":{"line":17,"column":73}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},{"start":{"line":32,"column":2},"end":{"line":37,"column":3}}]}},"s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,1],"2":[1,1],"3":[0,1]},"f":{"1":1,"2":1,"3":1,"4":0},"code":"import {\n  createStore,\n  Store,\n  compose,\n  applyMiddleware,\n} from 'redux';\n\nimport reducer from './reducer';\n\nimport cryptoMiddleware from './middleware/encryption';\n\nconst middleware = [\n  cryptoMiddleware,\n];\n\nfunction addDevTools() {\n  if (process.env.NODE_ENV !== 'production' && !!window.devToolsExtension) {\n    return window.devToolsExtension();\n  }\n  return (f: any) => f;\n}\n\nconst createConfiguredStore = () => {\n  const store = createStore(\n    reducer,\n    compose(\n      addDevTools(),\n      applyMiddleware(...middleware),\n    ),\n  );\n\n  if (module.hot) {\n    module.hot.accept('./reducer', () => {\n      const nextReducer = require('./reducer').default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n  return store as Store<StoreState>;\n};\n\nexport default createConfiguredStore;\n","l":{"12":1,"17":1,"18":0,"20":1,"23":1,"24":1,"32":1,"33":0,"34":0,"35":0,"38":1}}}
